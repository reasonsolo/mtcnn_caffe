name: "PNet"
layer {
  name: "train_data"
  type: "Python"
  top: "img"
  top: "label"
  top: "bbox"
  python_param {
    module: "python_layer"
    layer: "DataLayer"
    param_str: '{"net": "pnet", "batch": 128}'
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "img"
  top: "conv1"
  param { lr_mult: 1 decay_mult: 1 }
  # learning rate and decay multipliers for the biases
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 10
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "batch_normalization_5"
  type: "BatchNorm"
  bottom: "conv1"
  top: "batch_normalization_5"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "batch_normalization_5_scale"
  type: "Scale"
  bottom: "batch_normalization_5"
  top: "batch_normalization_5"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "prelu1"
  type: "PReLU"
  bottom: "batch_normalization_5"
  top: "prelu1"
}
layer {
  name: "max_pooling2d_3"
  type: "Pooling"
  bottom: "prelu1"
  top: "max_pooling2d_3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "max_pooling2d_3"
  top: "conv2"
  convolution_param {
    num_output: 14
    bias_term: true
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "batch_normalization_6"
  type: "BatchNorm"
  bottom: "conv2"
  top: "batch_normalization_6"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "batch_normalization_6_scale"
  type: "Scale"
  bottom: "batch_normalization_6"
  top: "batch_normalization_6"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "prelu2"
  type: "PReLU"
  bottom: "batch_normalization_6"
  top: "prelu2"
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "prelu2"
  top: "conv3"
  convolution_param {
    num_output: 16
    bias_term: true
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "batch_normalization_7"
  type: "BatchNorm"
  bottom: "conv3"
  top: "batch_normalization_7"
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "batch_normalization_7_scale"
  type: "Scale"
  bottom: "batch_normalization_7"
  top: "batch_normalization_7"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "prelu3"
  type: "PReLU"
  bottom: "batch_normalization_7"
  top: "prelu3"
}
layer {
  name: "conv4-1"
  type: "Convolution"
  bottom: "prelu3"
  top: "conv4-1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    kernel_size: 1
    stride: 1
     weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "conv4-2"
  type: "Convolution"
  bottom: "prelu3"
  top: "conv4-2"
  convolution_param {
    num_output: 4
    bias_term: true
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "label_bridge"
  type: "Python"
  bottom: "conv4-1"
  bottom: "label"
  bottom: "conv4-2"
  bottom: "bbox"
  top: "conv4-1-valid"
  top: "label-valid"
  top: "conv4-2-valid"
  top: "bbox-valid"
  propagate_down: 1
  propagate_down: 0
  propagate_down: 1
  propagate_down: 0
  python_param {
    module: "python_layer"
    layer:  "LabelBridgeLayer"
  }
  include {
    phase: TRAIN
  }
}

layer {
  name: "label_loss"
  type: "SoftmaxWithLoss"
  bottom: "conv4-1-valid"
  bottom: "label-valid"
  top: "label_loss"
  propagate_down: 1
  propagate_down: 0
  loss_weight: 1
  include {
    phase: TRAIN
  }
}
layer {
  name: "label_acc"
  type: "Accuracy"
  bottom: "conv4-1-valid"
  bottom: "label-valid"
  top: "label_acc"
  include {
    phase: TRAIN
  }
}
layer {
  name: "bbox_loss"
  type: "EuclideanLoss"
  bottom: "conv4-2-valid"
  bottom: "bbox-valid"
  top: "bbox_loss"
  loss_weight: 0.5
  include {
    phase: TRAIN
  }
}
